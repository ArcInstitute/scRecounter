includeConfig "config/utils.config"

params {
  samples    = "tmp/fetchngs_1mil/samples.csv"        // CSV of accessions or fastq files
  barcodes   = "tmp/fetchngs_1mil/barcodes.csv"       // CSV of barcodes
  outdir     = "results"  // output directory
  star_index = "/large_storage/goodarzilab/public/scRecount/genomes/star_refData_2020_hg38"
}

// Automatically setting the working directory (-work-dir)
workDir = getWorkDir()

//-- Extra configs --//
includeConfig "config/process.config"
includeConfig "config/profiles.config"

//-- Functions --//
// Remove trailing forward slashes in a string
def fmtPath(path_str) {
    return path_str.replaceAll(/\/+$/, '')
}

// Limit to the max resources of the available machine
def check_max(obj, type){
    if(type == 'memory'){
        if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1){
            return params.max_memory as nextflow.util.MemoryUnit
        }
    } else if(type == 'time'){
        if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1){
            return params.max_time as nextflow.util.Duration
        }
    } else if(type == 'cpus'){
        if (obj > params.max_cpus as int){
            return params.max_cpus as int
        }
    }
    return obj
}

// Auto-setting of the working directory
def getWorkDir() {
    def userGroup = "id -gn".execute().text.trim()
    def userName = "whoami".execute().text.trim()
    def workDir = "/scratch/$userGroup/$userName/nextflow-work/scRecounter"
    return workDir
}

