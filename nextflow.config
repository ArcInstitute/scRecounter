includeConfig "config/utils.config"

params {
  accessions     = ""                       // CSV of accessions to download
  barcodes       = "data/barcodes.csv"      // CSV listing barcode files
  star_indices   = "data/star_indices.csv"  // CSV listing STAR indices
  output_dir     = "results"                // output directory name
  max_sra_size   = 300                      // Max SRA file size in GB (determined via sra-stat); all larger will be filtered
  max_spots      = 100000                   // max number of spots (read-pairs) for STAR param assessment
  min_read_len   = 28                       // minimum read length for R1 & R2 (shorter read files will be ignored)
  define         = false                    // just define the STAR parameters for each sample
  db_host        = "35.243.133.29"
  db_name        = "sragent"
  db_username    = "postgres"
  executor       = "local"
}

// Automatically setting the working directory (-work-dir)
workDir = getWorkDir()

//-- Extra configs --//
includeConfig "config/process.config"
includeConfig "config/profiles.config"

//-- Functions --//
// Remove trailing forward slashes in a string
def fmtPath(path_str) {
    return path_str.replaceAll(/\/+$/, '')
}

// Limit to the max resources of the available machine
def check_max(obj, type){
    if(type == 'memory'){
        if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1){
            return params.max_memory as nextflow.util.MemoryUnit
        }
    } else if(type == 'time'){
        if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1){
            return params.max_time as nextflow.util.Duration
        }
    } else if(type == 'cpus'){
        if (obj > params.max_cpus as int){
            return params.max_cpus as int
        }
    }
    return obj
}

// Auto-setting of the working directory
def getWorkDir() {
    def userGroup = "id -gn".execute().text.trim()
    def userName = "whoami".execute().text.trim()
    def workDir = "/scratch/$userGroup/$userName/nextflow-work/scRecounter"
    return workDir
}

