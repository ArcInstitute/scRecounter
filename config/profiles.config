profiles {
    conda {
        conda.enabled          = true
        conda.useMamba         = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.sudo            = false
        docker.runOptions      = "-u \$(id -u):\$(id -g) --platform=linux/amd64"
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    vm {
        process {
            errorStrategy  = "terminate"
            maxRetries     = 0
            resourceLimits = [ cpus: 24, memory: 96.GB, time: 72.h ]
        }
    }
    slurm {
        executor.queueSize     = 30
        process {
            executor       = "slurm"
            queue          = "cpu_batch"
            errorStrategy  = "retry"  // "terminate"
            maxRetries     = 1
            resourceLimits = [ cpus: 24, memory: 800.GB, time: 72.h ]
        }
    }
    gcp {
        workDir            = "gs://arc-ctc-nextflow/scRecounter/work"
        fusion.enabled     = false
        wave.enabled       = false
        executor.queueSize = 200
        process {
            executor           = "google-batch"
            errorStrategy      = "retry"
            maxRetries         = 2
            scratch            = true
            resourceLimits     = [ cpus: 24, memory: 600.GB, time: 72.h ]
        }
        params {
            barcodes     = "data/gcp/barcodes.csv"
            star_indices = "data/gcp/star_indices.csv"
        }
        google {
            project   = "c-tc-429521"
            location  = "us-east1"
            batch {
                serviceAccountEmail = "nick-nextflow@c-tc-429521.iam.gserviceaccount.com"
                spot                = true
                maxSpotAttempts     = 3
            }
        }
    }
    dev {
        params {
            max_spots    = 100000
            min_read_len = 20
            db_name      = "sragent-test"
        }
    }
    prod {
        params {
            output_dir = "gs://arc-screcount-1/scRecounter/"
        }
    }
    vm_dev {
        params {
            barcodes     = "data/barcodes_n2.csv"
            star_indices = "data/star_indices_hg.csv"
        }
    }
    slurm_dev {
        params {
            barcodes     = "data/barcodes_n2.csv"
            star_indices = "data/star_indices_hg.csv"
        }
    }
    gcp_dev {
        params {
            barcodes     = "data/gcp/barcodes_n2.csv"
            star_indices = "data/gcp/star_indices_hg.csv"
        }
    }
    acc_dev {
        params {
            accessions = "data/accessions_small_n2.csv"
            output_dir = "gs://arc-ctc-nextflow/scRecounter/results/acc-n2"
        }
    }
    no_acc_dev {
        params {
            accessions = ""
            output_dir = "gs://arc-ctc-nextflow/scRecounter/results/no-acc"
        }
    }
    reads_dev {
        params.reads  = "tmp/fetchngs_1mil/reads.csv"
    } 
    report {
        report {
            enabled   = true
            overwrite = true
            file      = "${params.output_dir}/nf-report/${params.timestamp}.html"
        }
    }
    trace {
        trace {
            enabled   = true
            overwrite = true
            file      = "${params.output_dir}/nf-trace/${params.timestamp}.txt"
            fields    = "task_id,hash,native_id,name,status,exit,submit,container,cpus,time,disk,memory,attempt,submit,duration,realtime,%cpu,peak_rss,peak_vmem,rchar,wchar,workdir,scratch"
        }
    }
}


