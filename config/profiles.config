profiles {
    conda {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.sudo            = false
        docker.runOptions      = "-u \$(id -u):\$(id -g) --platform=linux/amd64"
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    slurm {
        process.executor      = "slurm"
        process.queue         = "cpu_batch"
        process.errorStrategy = "retry"  // "terminate"
        process.maxRetries    = 1
        executor.queueSize    = 30
        process.resourceLimits = [ cpus: 24, memory: 800.GB, time: 72.h ]
    }
    dev_acc {
        params.accessions   = "data/accessions_small_n2.csv"
        params.barcodes     = "data/barcodes_n2.csv"
        params.star_indices = "data/star_indices_hg.csv"
        params.outdir       = "tmp/results_acc-n2"
        params.define       = true
        params.max_spots    = 100000
        params.keep_temp    = true
    }
    dev_reads {
        params.reads     = "tmp/fetchngs_1mil/reads.csv"
        params.keep_temp = true
    }
    vm {
        process.errorStrategy  = "terminate"
        process.maxRetries     = 0
        process.resourceLimits = [ cpus: 24, memory: 96.GB, time: 72.h ]
    }
    gcp {
        workDir                = "gs://arc-ctc-nextflow/work"
        process.executor       = "google-batch"
        process.errorStrategy  = "retry"
        process.maxRetries     = 3
        process.scratch        = true
        process.resourceLimits = [ cpus: 24, memory: 800.GB, time: 72.h ]
        google.project         = "c-tc-429521"
        google.location        = "us-east1"
        fusion.enabled         = true
        wave.enabled           = true
        executor.queueSize     = 50
    } 
    report {
        report.enabled   = true
        report.overwrite = true
        report.file      = "${params.output_dir}/nf-report/${params.timestamp}.html"
    }
    trace {
        trace.enabled   = true
        trace.overwrite = true
        trace.file      = "${params.output_dir}/nf-trace/${params.timestamp}.txt"
        trace.fields    = "task_id,hash,native_id,name,status,exit,submit,container,cpus,time,disk,memory,attempt,submit,duration,realtime,%cpu,peak_rss,peak_vmem,rchar,wchar,workdir,scratch"
    }
}


